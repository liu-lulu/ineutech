package com.kkbc.util;

import java.io.UnsupportedEncodingException;
import java.util.Date;

public class Test {
	
	public static void main(String[] args) throws UnsupportedEncodingException {

		String aString="00011331373036313531343537353301312C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C33312E3135393239312C302C3132312E3037393537332C302C3541354545462C3541354344352C3541354546412C3541354436342C3541354435342C3541354541332C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C";
		String bString="00011331373036313531363230303201312C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C33312E3232383638312C302C3132312E3437313631312C302C3541354545462C3541354344352C3541354546412C3541354436342C3541354435342C3541354541332C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C";
//		byte[] a={0x00,0x01,0x13,0x31,0x37,0x30,0x36,0x31,0x35,0x31,0x34,0x35,0x37,0x35,0x33,0x01,0x31,0x2C,0x2D,0x39,0x39,0x2E,0x39,0x39,0x2C,0x2D,0x39,0x39,0x2E,0x39,0x39,0x2C,0x2D,0x39,0x39,0x2E,0x39,0x39,0x2C,0x2D,0x39,0x39,0x2E,0x39,0x39,0x2C,0x2D,0x39,0x39,0x2E,0x39,0x39,0x2C,0x2D,0x39,0x39,0x2E,0x39,0x39,0x2C,0x2D,0x39,0x39,0x2E,0x39,0x39,0x2C,0x33,0x31,0x2E,0x31,0x35,0x39,0x32,0x39,0x31,0x2C,0x30,0x2C,0x31,0x32,0x31,0x2E,0x30,0x37,0x39,0x35,0x37,0x33,0x2C,0x30,0x2C,0x35,0x41,0x35,0x45,0x45,0x46,0x2C,0x35,0x41,0x35,0x43,0x44,0x35,0x2C,0x35,0x41,0x35,0x45,0x46,0x41,0x2C,0x35,0x41,0x35,0x44,0x36,0x34,0x2C,0x35,0x41,0x35,0x44,0x35,0x34,0x2C,0x35,0x41,0x35,0x45,0x41,0x33,0x2C,0x2D,0x39,0x39,0x2E,0x39,0x39,0x2C,0x2D,0x39,0x39,0x2E,0x39,0x39,0x2C,0x2D,0x39,0x39,0x2E,0x39,0x39,0x2C,0x2D,0x39,0x39,0x2E,0x39,0x39,0x2C,0x2D,0x39,0x39,0x2E,0x39,0x39,0x2C,0x2D,0x39,0x39,0x2E,0x39,0x39,0x2C,0x2D,0x39,0x39,0x2E,0x39,0x39,0x2C,0x2D,0x39,0x39,0x2E,0x39,0x39,0x2C,0x2D,0x39,0x39,0x2E,0x39,0x39,0x2C,0x2D,0x39,0x39,0x2E,0x39,0x39,0x2C,0x2D,0x39,0x39,0x2E,0x39,0x39,0x2C,0x2D,0x39,0x39,0x2E,0x39,0x39,0x2C,0x2D,0x39,0x39,0x2E,0x39,0x39,0x2C,0x2D,0x39,0x39,0x2E,0x39,0x39,0x2C,0x2D,0x39,0x39,0x2E,0x39,0x39,0x2C,0x2D,0x39,0x39,0x2E,0x39,0x39,0x2C};
		byte[] a={0x00,0x01,0x13,0x31,0x37,0x30,0x36,0x31,0x35,0x31,0x36,0x32,0x30,0x30,0x32,0x01,0x31,0x2C,0x2D,0x39,0x39,0x2E,0x39,0x39,0x2C,0x2D,0x39,0x39,0x2E,0x39,0x39,0x2C,0x2D,0x39,0x39,0x2E,0x39,0x39,0x2C,0x2D,0x39,0x39,0x2E,0x39,0x39,0x2C,0x2D,0x39,0x39,0x2E,0x39,0x39,0x2C,0x2D,0x39,0x39,0x2E,0x39,0x39,0x2C,0x2D,0x39,0x39,0x2E,0x39,0x39,0x2C,0x33,0x31,0x2E,0x32,0x32,0x38,0x36,0x38,0x31,0x2C,0x30,0x2C,0x31,0x32,0x31,0x2E,0x34,0x37,0x31,0x36,0x31,0x31,0x2C,0x30,0x2C,0x35,0x41,0x35,0x45,0x45,0x46,0x2C,0x35,0x41,0x35,0x43,0x44,0x35,0x2C,0x35,0x41,0x35,0x45,0x46,0x41,0x2C,0x35,0x41,0x35,0x44,0x36,0x34,0x2C,0x35,0x41,0x35,0x44,0x35,0x34,0x2C,0x35,0x41,0x35,0x45,0x41,0x33,0x2C,0x2D,0x39,0x39,0x2E,0x39,0x39,0x2C,0x2D,0x39,0x39,0x2E,0x39,0x39,0x2C,0x2D,0x39,0x39,0x2E,0x39,0x39,0x2C,0x2D,0x39,0x39,0x2E,0x39,0x39,0x2C,0x2D,0x39,0x39,0x2E,0x39,0x39,0x2C,0x2D,0x39,0x39,0x2E,0x39,0x39,0x2C,0x2D,0x39,0x39,0x2E,0x39,0x39,0x2C,0x2D,0x39,0x39,0x2E,0x39,0x39,0x2C,0x2D,0x39,0x39,0x2E,0x39,0x39,0x2C,0x2D,0x39,0x39,0x2E,0x39,0x39,0x2C,0x2D,0x39,0x39,0x2E,0x39,0x39,0x2C,0x2D,0x39,0x39,0x2E,0x39,0x39,0x2C,0x2D,0x39,0x39,0x2E,0x39,0x39,0x2C,0x2D,0x39,0x39,0x2E,0x39,0x39,0x2C,0x2D,0x39,0x39,0x2E,0x39,0x39,0x2C,0x2D,0x39,0x39,0x2E,0x39,0x39,0x2C};
		System.out.println(aString.length());
		for (int i = 0; i < aString.length(); i=i+2) {
			System.out.print("0x"+aString.substring(i, i+2)+",");
		}
		
		byte[] pData=new byte[12];
		//获取采集时间
		System.arraycopy(a, 3, pData, 0, 12);
		String dateStr=new String(pData,"ascii");
		System.out.println("采集时间:"+dateStr);
		Date caijitime=DateUtil.getDateStringByNWX(dateStr);//获取采集时间
		
		//起始通道号
		pData=new byte[1];
		System.arraycopy(a, 15, pData, 0, 1);
		System.out.println("起始通道号:"+pData[0]);
		
		byte[] strData=new byte[a.length-16];
		System.arraycopy(a, 16, strData, 0, strData.length);
		String str=new String(strData, "utf-8");
		System.out.println("NWX上送字符串格式模拟量实时数据各通道:"+str);
		String[] strArr=str.split(",");
		int dtutpmsstatus=Integer.parseInt(strArr[0]);//DTU与TPMS通信状态
		String yuliu1_phone=strArr[1];//预留拖卡1的手机号码
		String yuliu2_phone=strArr[2];//预留拖卡2的手机号码
		String yuliu3_phone=strArr[3];//预留拖卡3的手机号码
		String yuliu4_phone=strArr[4];//预留拖卡4的手机号码
		String dtu_no=strArr[5];//预留拖卡4的手机号码
		String trucks_id=strArr[6];//车牌
		String sim=strArr[7];//sim
		double latitude=Double.parseDouble(strArr[8]);//纬度
		int latitude_type=Integer.parseInt(strArr[9]);//北纬或南纬(0表示北纬,1表示南纬)
		double longitude=Double.parseDouble(strArr[10]);//经度
		int longitude_type=Integer.parseInt(strArr[11]);//东经或西经(0表示东经,1表示西经)
		int j=0;
	    StringBuffer fasheqiIds=new StringBuffer();
		for(int i=12;i<strArr.length;i++){
			j++;
			fasheqiIds.append(strArr[i]+";");
		}
		System.out.println(fasheqiIds.toString());
		
		String a1="00011331373036313531343537353301312C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C33312E3135393239312C302C3132312E3037393537332C302C3541354545462C3541354344352C3541354546412C3541354436342C3541354435342C3541354541332C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C";
		String a2="00011331373036313531363230303201312C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C33312E3232383638312C302C3132312E3437313631312C302C3541354545462C3541354344352C3541354546412C3541354436342C3541354435342C3541354541332C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C2D39392E39392C";

		
	}

}
