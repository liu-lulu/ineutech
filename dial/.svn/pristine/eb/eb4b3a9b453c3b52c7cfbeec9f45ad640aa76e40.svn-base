package com.kkbc.dao.impl;

import java.util.List;

import com.kkbc.dao.DeviceDao;
import com.kkbc.entity.Hard;
import com.kkbc.entity.TestInfo;
import com.kkbc.entity.TestScoreVO;
import com.kkbc.entity.TestUser;

public class DeviceDaoImpl extends BaseDaoImpl implements DeviceDao{

	@Override
	public int saveData(TestScoreVO data) {
		int a=(int) getSqlMapClientTemplate().insert("TestScoreVO.saveData", data);
		int b=(int) getSqlMapClientTemplate().insert("TestScoreVO.saveToHistory", data);
		if (a>0&&b>0) {
			return 1;
		}
		return 0;
		
	}

	@Override
	public TestUser getUser(TestUser user) {
		return (TestUser) getSqlMapClientTemplate().queryForObject("TestScoreVO.getUserFromBind", user);
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<TestUser> getAllTestUser() {
		return getSqlMapClientTemplate().queryForList("TestScoreVO.getUser");
	}

	@Override
	public int saveHardInfo(Hard hard) {
		
		return (int) getSqlMapClientTemplate().insert("Hard.saveData", hard);
	}

	@Override
	public int updEle(Hard hard) {
		return (int) getSqlMapClientTemplate().update("Hard.updEle", hard);
	}

	@Override
	public Hard getByMac(String mac) {
		return (Hard) getSqlMapClientTemplate().queryForObject("Hard.getInfoByMac", mac);
	}

	@Override
	public int updateConfirmNameFlag(TestUser testUser) {
		return getSqlMapClientTemplate().update("TestScoreVO.updConfirmName", testUser);
	}

	@Override
	public int updateDeviceStatus(TestUser testUser) {
		return getSqlMapClientTemplate().update("TestScoreVO.updDeviceStatus", testUser);
	}

	@Override
	public int savePackageData(TestScoreVO data) {
		return (int) getSqlMapClientTemplate().insert("TestScoreVO.saveToPackHistory", data);
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<TestUser> getTestUserFromBind(int testId) {
		return getSqlMapClientTemplate().queryForList("TestScoreVO.getTestUserFromBind",testId);
	}

	@Override
	public int updLastInfo(Hard hard) {
		return (int) getSqlMapClientTemplate().update("Hard.updLastInfo", hard);
	}

	@Override
	public TestUser getUserFromNow(String mac) {
		return (TestUser) getSqlMapClientTemplate().queryForObject("TestScoreVO.getUser", mac);
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<Hard> getTestDevice(int testId) {
		return getSqlMapClientTemplate().queryForList("Hard.getTestDevice",testId);
	}

	@Override
	public Object saveNowInfo(int testId) {
		return getSqlMapClientTemplate().insert("Hard.saveNowInfo", testId);
	}

	@Override
	public int deleteFromNow(int testId) {
		return (int) getSqlMapClientTemplate().delete("Hard.deleteFromNow", testId);
	}

	@Override
	public TestInfo getTestInfoById(int testId) {
		return (TestInfo) getSqlMapClientTemplate().queryForObject("TestScoreVO.getTestInfoById",testId);
	}
	
	

}
